{"ast":null,"code":"import StyledFirebaseAuth from'react-firebaseui/StyledFirebaseAuth';import firebase from\"firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){// Configure FirebaseUI.\nvar uiConfig={// Popup signin flow rather than redirect flow.\nsignInFlow:'popup',// We will display Google and Facebook as auth providers.\nsignInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],callbacks:{// Avoid redirects after sign-in.\nsignInSuccessWithAuthResult:function signInSuccessWithAuthResult(){return false;}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Time Tracker\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please sign-in:\"}),/*#__PURE__*/_jsx(StyledFirebaseAuth,{uiConfig:uiConfig,firebaseAuth:firebase.auth()})]});};export default Login;","map":{"version":3,"sources":["/Users/tomas/Documents/firebase/react/auth/src/pages/Login.jsx"],"names":["StyledFirebaseAuth","firebase","Login","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult"],"mappings":"AAAA,MAAOA,CAAAA,kBAAP,KAA+B,qCAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,6IAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB;AACF,GAAMC,CAAAA,QAAQ,CAAG,CACf;AACAC,UAAU,CAAE,OAFG,CAGf;AACAC,aAAa,CAAE,CACbJ,QAAQ,CAACK,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,CAEbP,QAAQ,CAACK,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB,CAJA,CAQfE,SAAS,CAAE,CACT;AACAC,2BAA2B,CAAE,6CAAM,MAAN,EAFpB,CARI,CAAjB,CAcA,mBACI,wCACE,oCADF,cAEE,sCAFF,cAGE,KAAC,kBAAD,EAAoB,QAAQ,CAAER,QAA9B,CAAwC,YAAY,CAAEF,QAAQ,CAACK,IAAT,EAAtD,EAHF,GADJ,CAOD,CAvBD,CAyBA,cAAeJ,CAAAA,KAAf","sourcesContent":["import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from \"firebase\";\n\nconst Login = () => {\n    // Configure FirebaseUI.\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  return (\n      <>\n        <h1>Time Tracker</h1>\n        <p>Please sign-in:</p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </>\n  )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}